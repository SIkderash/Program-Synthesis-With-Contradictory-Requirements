Query,Type,Sub-type,Example
"Write a function that checks if all cars are electric and returns True if some cars are electric but only if they are new.",Subalterns,Alius,"def check_car_type(cars):\n    all_electric = all(car['type'] == 'electric' for car in cars)\n    some_electric_if_new = any(car['type'] == 'electric' and car['condition'] == 'new' for car in cars)\n    return all_electric, some_electric_if_new\n\n# Example usage:\ncars = [{'type': 'electric', 'condition': 'new'}, {'type': 'gas', 'condition': 'old'}]\nprint(check_car_type(cars))  # (False, True)"
"Write a function that checks if all products are on sale and returns True if some products are on sale, but only if they have a discount.",Subalterns,Alius,"def check_product_sale(products):\n    all_on_sale = all(product['on_sale'] for product in products)\n    some_on_sale_if_discounted = any(product['on_sale'] and product['discount'] > 0 for product in products)\n    return all_on_sale, some_on_sale_if_discounted\n\n# Example usage:\nproducts = [{'on_sale': True, 'discount': 10}, {'on_sale': True, 'discount': 0}]\nprint(check_product_sale(products))  # (False, True)"
"Write a function that checks if all students passed and returns True if some students passed, but only if they studied.",Subalterns,Alius,"def check_student_pass_status(students):\n    all_passed = all(student['status'] == 'passed' for student in students)\n    some_passed_if_studied = any(student['status'] == 'passed' and student['studied'] for student in students)\n    return all_passed, some_passed_if_studied\n\n# Example usage:\nstudents = [{'status': 'passed', 'studied': True}, {'status': 'failed', 'studied': False}]\nprint(check_student_pass_status(students))  # (False, True)"
"Write a function that checks if all tickets are sold and returns True if some tickets are sold, but only if they were purchased early.",Subalterns,Alius,"def check_ticket_sales(tickets):\n    all_sold = all(ticket['sold'] for ticket in tickets)\n    some_sold_if_early = any(ticket['sold'] and ticket['purchased_early'] for ticket in tickets)\n    return all_sold, some_sold_if_early\n\n# Example usage:\ntickets = [{'sold': True, 'purchased_early': True}, {'sold': True, 'purchased_early': False}]\nprint(check_ticket_sales(tickets))  # (False, True)"
"Write a function that checks if all employees are full-time and returns True if some employees are full-time, but only if they have benefits.",Subalterns,Alius,"def check_employee_status(employees):\n    all_full_time = all(employee['full_time'] for employee in employees)\n    some_full_time_if_benefits = any(employee['full_time'] and employee['has_benefits'] for employee in employees)\n    return all_full_time, some_full_time_if_benefits\n\n# Example usage:\nemployees = [{'full_time': True, 'has_benefits': True}, {'full_time': True, 'has_benefits': False}]\nprint(check_employee_status(employees))  # (False, True)"
"Write a function that checks if all phones are smartphones and returns True if some phones are smartphones, but only if they have a touchscreen.",Subalterns,Alius,"def check_phone_type(phones):\n    all_smartphones = all(phone['type'] == 'smartphone' for phone in phones)\n    some_smartphones_if_touchscreen = any(phone['type'] == 'smartphone' and phone['has_touchscreen'] for phone in phones)\n    return all_smartphones, some_smartphones_if_touchscreen\n\n# Example usage:\nphones = [{'type': 'smartphone', 'has_touchscreen': True}, {'type': 'basic', 'has_touchscreen': False}]\nprint(check_phone_type(phones))  # (False, True)"
"Write a function that checks if all tasks are completed and returns True if some tasks are completed, but only if they are urgent.",Subalterns,Alius,"def check_task_status(tasks):\n    all_completed = all(task['status'] == 'completed' for task in tasks)\n    some_completed_if_urgent = any(task['status'] == 'completed' and task['urgent'] for task in tasks)\n    return all_completed, some_completed_if_urgent\n\n# Example usage:\ntasks = [{'status': 'completed', 'urgent': True}, {'status': 'not completed', 'urgent': False}]\nprint(check_task_status(tasks))  # (False, True)"
"Write a function that checks if all animals are domesticated and returns True if some animals are domesticated, but only if they live indoors.",Subalterns,Alius,"def check_animal_status(animals):\n    all_domesticated = all(animal['domesticated'] for animal in animals)\n    some_domesticated_if_indoor = any(animal['domesticated'] and animal['lives_indoors'] for animal in animals)\n    return all_domesticated, some_domesticated_if_indoor\n\n# Example usage:\nanimals = [{'domesticated': True, 'lives_indoors': True}, {'domesticated': True, 'lives_indoors': False}]\nprint(check_animal_status(animals))  # (False, True)"
"Write a function that checks if all restaurants are open and returns True if some restaurants are open, but only if they serve breakfast.",Subalterns,Alius,"def check_restaurant_status(restaurants):\n    all_open = all(restaurant['open'] for restaurant in restaurants)\n    some_open_if_breakfast = any(restaurant['open'] and restaurant['serves_breakfast'] for restaurant in restaurants)\n    return all_open, some_open_if_breakfast\n\n# Example usage:\nrestaurants = [{'open': True, 'serves_breakfast': True}, {'open': True, 'serves_breakfast': False}]\nprint(check_restaurant_status(restaurants))  # (False, True)"
"Write a function that checks if all books are available and returns True if some books are available, but only if they are new.",Subalterns,Alius,"def check_book_availability(books):\n    all_available = all(book['available'] for book in books)\n    some_available_if_new = any(book['available'] and book['new'] for book in books)\n    return all_available, some_available_if_new\n\n# Example usage:\nbooks = [{'available': True, 'new': True}, {'available': True, 'new': False}]\nprint(check_book_availability(books))  # (False, True)"
"Write a function that checks if all students in a list have passed and returns True if some students have passed.",Subalterns,Simplex,"def check_student_pass_status(students):\n    all_passed = all(student == 'passed' for student in students)\n    some_passed = any(student == 'passed' for student in students)\n    return all_passed, some_passed\n\n# Example usage:\nstudents = ['passed', 'passed', 'failed']\nprint(check_student_pass_status(students))  # (False, True)"
"Write a function that checks if all items are expensive and returns True if some items are expensive.",Subalterns,Simplex,"def check_item_expensiveness(items):\n    all_expensive = all(item == 'expensive' for item in items)\n    some_expensive = any(item == 'expensive' for item in items)\n    return all_expensive, some_expensive\n\n# Example usage:\nitems = ['expensive', 'cheap', 'expensive']\nprint(check_item_expensiveness(items))  # (False, True)"
"Write a function that checks if all lights are on and returns True if some lights are on.",Subalterns,Simplex,"def check_lights_status(lights):\n    all_on = all(light == 'on' for light in lights)\n    some_on = any(light == 'on' for light in lights)\n    return all_on, some_on\n\n# Example usage:\nlights = ['on', 'off', 'on']\nprint(check_lights_status(lights))  # (False, True)"
"Write a function that checks if all employees are active and returns True if some employees are active.",Subalterns,Simplex,"def check_employee_activity(employees):\n    all_active = all(employee == 'active' for employee in employees)\n    some_active = any(employee == 'active' for employee in employees)\n    return all_active, some_active\n\n# Example usage:\nemployees = ['active', 'inactive', 'active']\nprint(check_employee_activity(employees))  # (False, True)"
"Write a function that checks if all transactions were successful and returns True if some transactions were successful.",Subalterns,Simplex,"def check_transaction_status(transactions):\n    all_successful = all(transaction == 'successful' for transaction in transactions)\n    some_successful = any(transaction == 'successful' for transaction in transactions)\n    return all_successful, some_successful\n\n# Example usage:\ntransactions = ['successful', 'failed', 'successful']\nprint(check_transaction_status(transactions))  # (False, True)"
"Write a function that checks if all items are available and returns True if some items are available.",Subalterns,Simplex,"def check_item_availability(items):\n    all_available = all(item == 'available' for item in items)\n    some_available = any(item == 'available' for item in items)\n    return all_available, some_available\n\n# Example usage:\nitems = ['available', 'not available', 'available']\nprint(check_item_availability(items))  # (False, True)"
"Write a function that checks if all websites are up and returns True if some websites are up.",Subalterns,Simplex,"def check_website_status(websites):\n    all_up = all(website == 'up' for website in websites)\n    some_up = any(website == 'up' for website in websites)\n    return all_up, some_up\n\n# Example usage:\nwebsites = ['up', 'down', 'up']\nprint(check_website_status(websites))  # (False, True)"
"Write a function that checks if all students are graduated and returns True if some students are graduated.",Subalterns,Simplex,"def check_student_graduation_status(students):\n    all_graduated = all(student == 'graduated' for student in students)\n    some_graduated = any(student == 'graduated' for student in students)\n    return all_graduated, some_graduated\n\n# Example usage:\nstudents = ['graduated', 'not graduated', 'graduated']\nprint(check_student_graduation_status(students))  # (False, True)"
"Write a function that checks if all cars are working and returns True if some cars are working.",Subalterns,Simplex,"def check_car_condition(cars):\n    all_working = all(car == 'working' for car in cars)\n    some_working = any(car == 'working' for car in cars)\n    return all_working, some_working\n\n# Example usage:\ncars = ['working', 'broken', 'working']\nprint(check_car_condition(cars))  # (False, True)"
"Write a function that checks if all tasks are completed and returns True if some tasks are completed.",Subalterns,Simplex,"def check_task_status(tasks):\n    all_completed = all(task == 'completed' for task in tasks)\n    some_completed = any(task == 'completed' for task in tasks)\n    return all_completed, some_completed\n\n# Example usage:\ntasks = ['completed', 'incomplete', 'completed']\nprint(check_task_status(tasks))  # (False, True)"
"Write a function that checks if all numbers are even and returns True if some numbers are even.",Subalterns,Idem,"def check_even_numbers(numbers):\n    all_even = all(number % 2 == 0 for number in numbers)\n    some_even = any(number % 2 == 0 for number in numbers)\n    return all_even, some_even\n\n# Example usage:\nnumbers = [2, 4, 6]\nprint(check_even_numbers(numbers))  # (True, True)"
"Write a function that checks if all workers are busy and returns True if some workers are busy.",Subalterns,Idem,"def check_worker_status(workers):\n    all_busy = all(worker == 'busy' for worker in workers)\n    some_busy = any(worker == 'busy' for worker in workers)\n    return all_busy, some_busy\n\n# Example usage:\nworkers = ['busy', 'busy', 'busy']\nprint(check_worker_status(workers))  # (True, True)"
"Write a function that checks if all books are available and returns True if some books are available.",Subalterns,Idem,"def check_book_availability(books):\n    all_available = all(book == 'available' for book in books)\n    some_available = any(book == 'available' for book in books)\n    return all_available, some_available\n\n# Example usage:\nbooks = ['available', 'available', 'available']\nprint(check_book_availability(books))  # (True, True)"
"Write a function that checks if all jobs are open and returns True if some jobs are open.",Subalterns,Idem,"def check_job_status(jobs):\n    all_open = all(job == 'open' for job in jobs)\n    some_open = any(job == 'open' for job in jobs)\n    return all_open, some_open\n\n# Example usage:\njobs = ['open', 'open', 'open']\nprint(check_job_status(jobs))  # (True, True)"
"Write a function that checks if all dogs are trained and returns True if some dogs are trained.",Subalterns,Idem,"def check_dog_training_status(dogs):\n    all_trained = all(dog == 'trained' for dog in dogs)\n    some_trained = any(dog == 'trained' for dog in dogs)\n    return all_trained, some_trained\n\n# Example usage:\ndogs = ['trained', 'trained', 'trained']\nprint(check_dog_training_status(dogs))  # (True, True)"
"Write a function that checks if all fruits are fresh and returns True if some fruits are fresh.",Subalterns,Idem,"def check_fruit_freshness(fruits):\n    all_fresh = all(fruit == 'fresh' for fruit in fruits)\n    some_fresh = any(fruit == 'fresh' for fruit in fruits)\n    return all_fresh, some_fresh\n\n# Example usage:\nfruits = ['fresh', 'fresh', 'fresh']\nprint(check_fruit_freshness(fruits))  # (True, True)"
"Write a function that checks if all courses are online and returns True if some courses are online.",Subalterns,Idem,"def check_course_status(courses):\n    all_online = all(course == 'online' for course in courses)\n    some_online = any(course == 'online' for course in courses)\n    return all_online, some_online\n\n# Example usage:\ncourses = ['online', 'online', 'online']\nprint(check_course_status(courses))  # (True, True)"
"Write a function that checks if all products are available and returns True if some products are available.",Subalterns,Idem,"def check_product_availability(products):\n    all_available = all(product == 'available' for product in products)\n    some_available = any(product == 'available' for product in products)\n    return all_available, some_available\n\n# Example usage:\nproducts = ['available', 'available', 'available']\nprint(check_product_availability(products))  # (True, True)"
"Write a function that checks if all people are vaccinated and returns True if some people are vaccinated.",Subalterns,Idem,"def check_vaccination_status(people):\n    all_vaccinated = all(person == 'vaccinated' for person in people)\n    some_vaccinated = any(person == 'vaccinated' for person in people)\n    return all_vaccinated, some_vaccinated\n\n# Example usage:\npeople = ['vaccinated', 'vaccinated', 'vaccinated']\nprint(check_vaccination_status(people))  # (True, True)"
"Write a function that checks if all tickets are sold and returns True if some tickets are sold.",Subalterns,Idem,"def check_ticket_sales(tickets):\n    all_sold = all(ticket == 'sold' for ticket in tickets)\n    some_sold = any(ticket == 'sold' for ticket in tickets)\n    return all_sold, some_sold\n\n# Example usage:\ntickets = ['sold', 'sold', 'sold']\nprint(check_ticket_sales(tickets))  # (True, True)"
"Write a function that returns True if the heater is both ON and OFF during the same season.",Contraries,Idem,"def check_heater_status(season):\n    return 'on' if season == 'winter' else 'off'\n\n# Example usage:\nprint(check_heater_status('winter'))  # 'on'\nprint(check_heater_status('summer'))  # 'off'"
"Write a function that returns True if the heating system is both ON and OFF during the same period.",Contraries,Idem,"def check_heating_system_status(time_period):\n    return 'on' if time_period == 'morning' else 'off'\n\n# Example usage:\nprint(check_heating_system_status('morning'))  # 'on'\nprint(check_heating_system_status('evening'))  # 'off'"
"Write a function that returns True if the security system is both ARMED during the night and DISARMED during the day.",Contraries,Idem,"def check_security_status(time_of_day):\n    return 'armed' if time_of_day == 'night' else 'disarmed'\n\n# Example usage:\nprint(check_security_status('night'))  # 'armed'\nprint(check_security_status('day'))  # 'disarmed'"
"Write a function that returns True if a traffic light is both RED during rush hour and GREEN during non-rush hour.",Contraries,Idem,"def check_traffic_light_status(time_of_day):\n    return 'red' if time_of_day == 'rush_hour' else 'green'\n\n# Example usage:\nprint(check_traffic_light_status('rush_hour'))  # 'red'\nprint(check_traffic_light_status('non_rush_hour'))  # 'green'"
"Write a function that returns True if the AC is both COOLING during the day and HEATING during the night.",Contraries,Idem,"def check_ac_mode(time_of_day):\n    return 'cooling' if time_of_day == 'day' else 'heating'\n\n# Example usage:\nprint(check_ac_mode('day'))  # 'cooling'\nprint(check_ac_mode('night'))  # 'heating'"
"Write a function that returns True if the window is both OPEN during the day and CLOSED at night.",Contraries,Idem,"def check_window_status(time_of_day):\n    return 'open' if time_of_day == 'day' else 'closed'\n\n# Example usage:\nprint(check_window_status('day'))  # 'open'\nprint(check_window_status('night'))  # 'closed'"
"Write a function that returns True if the fan is both ON during summer and OFF during winter.",Contraries,Idem,"def check_fan_status(season):\n    return 'on' if season == 'summer' else 'off'\n\n# Example usage:\nprint(check_fan_status('summer'))  # 'on'\nprint(check_fan_status('winter'))  # 'off'"
"Write a function that returns True if the lights are both ON during the night and OFF during the day.",Contraries,Idem,"def check_light_status(time_of_day):\n    return 'on' if time_of_day == 'night' else 'off'\n\n# Example usage:\nprint(check_light_status('night'))  # 'on'\nprint(check_light_status('day'))  # 'off'"
"Write a function that returns True if the heater is both HEATING during winter and COOLING during summer.",Contraries,Idem,"def check_heater_mode(season):\n    return 'heating' if season == 'winter' else 'cooling'\n\n# Example usage:\nprint(check_heater_mode('winter'))  # 'heating'\nprint(check_heater_mode('summer'))  # 'cooling'"
"Write a function that returns True if the fan is both FAST during the day and SLOW during the night.",Contraries,Idem,"def check_fan_speed(time_of_day):\n   return 'fast' if time_of_day == 'day' else 'slow'\n\n# Example usage:\nprint(check_fan_speed('day'))  # 'fast'\nprint(check_fan_speed('night'))  # 'slow'"
"Write a function that returns True if the traffic light is RED during rush hour and GREEN during off-peak times.",Contraries,Alius,"def check_traffic_light_status(time_of_day):\n    return 'red' if time_of_day == 'rush_hour' else 'green'\n\n# Example usage:\nprint(check_traffic_light_status('rush_hour'))  # 'red'\nprint(check_traffic_light_status('off_peak'))  # 'green'"
"Write a function that returns True if the car engine is ON when the car is moving and OFF when the car is parked.",Contraries,Alius,"def check_car_engine_status(car_status):\n    return 'on' if car_status == 'moving' else 'off'\n\n# Example usage:\nprint(check_car_engine_status('moving'))  # 'on'\nprint(check_car_engine_status('parked'))  # 'off'"
"Write a function that returns True if the temperature is both HOT when the air conditioner is off and COLD when the air conditioner is on.",Contraries,Alius,"def check_temperature_system(status):\n    return 'hot' if status == 'AC_off' else 'cold'\n\n# Example usage:\nprint(check_temperature_system('AC_off'))  # 'hot'\nprint(check_temperature_system('AC_on'))  # 'cold'"
"Write a function that returns True if a window is both OPEN when it's daytime and CLOSED when it's nighttime.",Contraries,Alius,"def check_window_mode(time_of_day):\n    return 'open' if time_of_day == 'day' else 'closed'\n\n# Example usage:\nprint(check_window_mode('day'))  # 'open'\nprint(check_window_mode('night'))  # 'closed'"
"Write a function that returns True if a door is LOCKED at night and UNLOCKED during the day.",Contraries,Alius,"def check_door_lock_status(time_of_day):\n    return 'locked' if time_of_day == 'night' else 'unlocked'\n\n# Example usage:\nprint(check_door_lock_status('night'))  # 'locked'\nprint(check_door_lock_status('day'))  # 'unlocked'"
"Write a function that returns True if a heater is both ON during the winter and OFF during the summer.",Contraries,Alius,"def check_heater_status(season):\n    return 'on' if season == 'winter' else 'off'\n\n# Example usage:\nprint(check_heater_status('winter'))  # 'on'\nprint(check_heater_status('summer'))  # 'off'"
"Write a function that returns True if a fan is ON when it's summer and OFF when it's winter.",Contraries,Alius,"def check_fan_status(season):\n    return 'on' if season == 'summer' else 'off'\n\n# Example usage:\nprint(check_fan_status('summer'))  # 'on'\nprint(check_fan_status('winter'))  # 'off'"
"Write a function that returns True if an alarm system is both ARMED when you're at home and DISARMED when you're away.",Contraries,Alius,"def check_alarm_status(location):\n    return 'armed' if location == 'home' else 'disarmed'\n\n# Example usage:\nprint(check_alarm_status('home'))  # 'armed'\nprint(check_alarm_status('away'))  # 'disarmed'"
"Write a function that returns True if a security system is ACTIVE during the day and INACTIVE during the night.",Contraries,Alius,"def check_security_system_status(time_of_day):\n    return 'active' if time_of_day == 'day' else 'inactive'\n\n# Example usage:\nprint(check_security_system_status('day'))  # 'active'\nprint(check_security_system_status('night'))  # 'inactive'"
"Write a function that returns True if the heating system is ON during the cold season and OFF during the warm season.",Contraries,Alius,"def check_heating_status(season):\n    return 'on' if season == 'winter' else 'off'\n\n# Example usage:\nprint(check_heating_status('winter'))  # 'on'\nprint(check_heating_status('summer'))  # 'off'"
"Write a function that returns True if a light is both RED and BLUE at the same time.",Contraries,Simplex,"def check_light_color(color):\n    return color == 'red' and color == 'blue'\n\n# Example usage:\nprint(check_light_color('red'))  # False"
"Write a function that returns True if the temperature is both HOT and COLD at the same time.",Contraries,Simplex,"def check_temperature(temp):\n    return temp > 30 and temp < 0\n\n# Example usage:\nprint(check_temperature(25))  # False"
"Write a function that returns True if a car is both MOVING and PARKED at the same time.",Contraries,Simplex,"def check_car_status(car_status):\n    return car_status == 'moving' and car_status == 'parked'\n\n# Example usage:\nprint(check_car_status('moving'))  # False"
"Write a function that returns True if a window is both OPEN and CLOSED at the same time.",Contraries,Simplex,"def check_window_status(window_status):\n    return window_status == 'open' and window_status == 'closed'\n\n# Example usage:\nprint(check_window_status('open'))  # False"
"Write a function that returns True if a battery is both CHARGED and UNCHARGED at the same time.",Contraries,Simplex,"def check_battery_status(battery_status):\n    return battery_status == 'charged' and battery_status == 'uncharged'\n\n# Example usage:\nprint(check_battery_status('charged'))  # False"
"Write a function that returns True if a door is both OPEN and CLOSED at the same time.",Contraries,Simplex,"def check_door_status(door_status):\n    return door_status == 'open' and door_status == 'closed'\n\n# Example usage:\nprint(check_door_status('open'))  # False"
"Write a function that returns True if the power is both ON and OFF at the same time.",Contraries,Simplex,"def check_power_status(power_status):\n    return power_status == 'on' and power_status == 'off'\n\n# Example usage:\nprint(check_power_status('on'))  # False"
"Write a function that returns True if a traffic light is both RED and GREEN at the same time.",Contraries,Simplex,"def check_traffic_light_status(light_status):\n    return light_status == 'red' and light_status == 'green'\n\n# Example usage:\nprint(check_traffic_light_status('red'))  # False"
"Write a function that returns True if the air conditioner is both ON and OFF at the same time.",Contraries,Simplex,"def check_ac_status(ac_status):\n    return ac_status == 'on' and ac_status == 'off'\n\n# Example usage:\nprint(check_ac_status('on'))  # False"
"Write a function that returns True if the alarm system is both ARMED and DISARMED at the same time.",Contraries,Simplex,"def check_alarm_status(alarm_status):\n    return alarm_status == 'armed' and alarm_status == 'disarmed'\n\n# Example usage:\nprint(check_alarm_status('armed'))  # False"